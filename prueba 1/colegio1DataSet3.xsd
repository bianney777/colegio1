<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="colegio1DataSet3" targetNamespace="http://tempuri.org/colegio1DataSet3.xsd" xmlns:mstns="http://tempuri.org/colegio1DataSet3.xsd" xmlns="http://tempuri.org/colegio1DataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="colegio1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="colegio1ConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.prueba_1.My.MySettings.GlobalReference.Default.colegio1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GradoTableAdapter" GeneratorDataComponentClassName="GradoTableAdapter" Name="Grado" UserDataComponentName="GradoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="colegio1ConnectionString (MySettings)" DbObjectName="colegio1.dbo.Grado" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Grado] WHERE (([GradoID] = @Original_GradoID) AND ((@IsNull_NombreGrado = 1 AND [NombreGrado] IS NULL) OR ([NombreGrado] = @Original_NombreGrado)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GradoID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradoID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NombreGrado" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NombreGrado" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NombreGrado" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NombreGrado" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Grado] ([NombreGrado]) VALUES (@NombreGrado);
SELECT GradoID, NombreGrado FROM Grado WHERE (GradoID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NombreGrado" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NombreGrado" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GradoID, NombreGrado FROM dbo.Grado</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Grado] SET [NombreGrado] = @NombreGrado WHERE (([GradoID] = @Original_GradoID) AND ((@IsNull_NombreGrado = 1 AND [NombreGrado] IS NULL) OR ([NombreGrado] = @Original_NombreGrado)));
SELECT GradoID, NombreGrado FROM Grado WHERE (GradoID = @GradoID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NombreGrado" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NombreGrado" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GradoID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradoID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NombreGrado" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NombreGrado" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NombreGrado" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NombreGrado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GradoID" ColumnName="GradoID" DataSourceName="colegio1.dbo.Grado" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GradoID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GradoID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GradoID" DataSetColumn="GradoID" />
              <Mapping SourceColumn="NombreGrado" DataSetColumn="NombreGrado" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="colegio1DataSet3" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="colegio1DataSet3" msprop:Generator_DataSetName="colegio1DataSet3">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Grado" msprop:Generator_RowEvHandlerName="GradoRowChangeEventHandler" msprop:Generator_RowDeletedName="GradoRowDeleted" msprop:Generator_RowDeletingName="GradoRowDeleting" msprop:Generator_RowEvArgName="GradoRowChangeEvent" msprop:Generator_TablePropName="Grado" msprop:Generator_RowChangedName="GradoRowChanged" msprop:Generator_RowChangingName="GradoRowChanging" msprop:Generator_TableClassName="GradoDataTable" msprop:Generator_RowClassName="GradoRow" msprop:Generator_TableVarName="tableGrado" msprop:Generator_UserTableName="Grado">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GradoID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="GradoID" msprop:Generator_ColumnPropNameInTable="GradoIDColumn" msprop:Generator_ColumnVarNameInTable="columnGradoID" msprop:Generator_UserColumnName="GradoID" type="xs:int" />
              <xs:element name="NombreGrado" msprop:Generator_ColumnPropNameInRow="NombreGrado" msprop:Generator_ColumnPropNameInTable="NombreGradoColumn" msprop:Generator_ColumnVarNameInTable="columnNombreGrado" msprop:Generator_UserColumnName="NombreGrado" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Grado" />
      <xs:field xpath="mstns:GradoID" />
    </xs:unique>
  </xs:element>
</xs:schema>